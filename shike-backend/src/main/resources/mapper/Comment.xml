<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tongji.softwaretest.shikebackend.mapper.CommentMapper">
    <resultMap id="BaseResultMap" type="com.tongji.softwaretest.shikebackend.entity.Comment">
        <id column="comment_id" jdbcType="INTEGER" property="commentId" />
        <result column="store_id" jdbcType="INTEGER" property="storeId" />
        <result column="store_name" jdbcType="VARCHAR" property="storeName" />
        <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
        <result column="comments" jdbcType="VARCHAR" property="comments" />
        <result column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="commit_time" jdbcType="VARCHAR" property="commitTime" />
        <result column="user_image" jdbcType="VARCHAR" property="userImage" />
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from t_comment
        where comment_id = #{commentId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.tongji.softwaretest.shikebackend.entity.Comment">
        insert into t_comment (comment_id, store_id, store_name,
        goods_name, comments, user_id,
        user_name, commit_time, user_image
        )
        values (#{commentId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, #{storeName,jdbcType=VARCHAR},
        #{goodsName,jdbcType=VARCHAR}, #{comments,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER},
        #{userName,jdbcType=VARCHAR}, #{commitTime,jdbcType=VARCHAR}, #{userImage,jdbcType=VARCHAR}
        )
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.tongji.softwaretest.shikebackend.entity.Comment">
        update t_comment
        set store_id = #{storeId,jdbcType=INTEGER},
        store_name = #{storeName,jdbcType=VARCHAR},
        goods_name = #{goodsName,jdbcType=VARCHAR},
        comments = #{comments,jdbcType=VARCHAR},
        user_id = #{userId,jdbcType=INTEGER},
        user_name = #{userName,jdbcType=VARCHAR},
        commit_time = #{commitTime,jdbcType=VARCHAR},
        user_image = #{userImage,jdbcType=VARCHAR}
        where comment_id = #{commentId,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select comment_id, store_id, store_name, goods_name, comments, user_id, user_name,
        commit_time, user_image
        from t_comment
        where comment_id = #{commentId,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select comment_id, store_id, store_name, goods_name, comments, user_id, user_name,
        commit_time, user_image
        from t_comment
        where store_id = #{storeId,jdbcType=INTEGER}
    </select>
</mapper>