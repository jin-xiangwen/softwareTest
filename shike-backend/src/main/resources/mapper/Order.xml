<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tongji.softwaretest.shikebackend.mapper.OrderMapper">
    <resultMap id="BaseResultMap" type="com.tongji.softwaretest.shikebackend.entity.Order">
        <id column="order_id" jdbcType="VARCHAR" property="orderId" />
        <result column="order_status" jdbcType="INTEGER" property="orderStatus" />
        <result column="store_id" jdbcType="INTEGER" property="storeId" />
        <result column="store_name" jdbcType="VARCHAR" property="storeName" />
        <result column="order_time" jdbcType="VARCHAR" property="orderTime" />
        <result column="arrive_time" jdbcType="VARCHAR" property="arriveTime" />
        <result column="address" jdbcType="VARCHAR" property="address" />
        <result column="delivery_side" jdbcType="VARCHAR" property="deliverySide" />
        <result column="pay_way" jdbcType="VARCHAR" property="payWay" />
        <result column="delivery_cost" jdbcType="REAL" property="deliveryCost" />
        <result column="preferential_price" jdbcType="REAL" property="preferentialPrice" />
        <result column="pay_cost" jdbcType="REAL" property="payCost" />
        <result column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="comment_flag" jdbcType="INTEGER" property="commentFlag" />
        <collection property="goods" ofType="com.tongji.softwaretest.shikebackend.entity.OrderGoods" select="com.tongji.softwaretest.shikebackend.mapper.OrderGoodsMapper.getGoods" column="order_id">

        </collection>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from t_order
        where order_id = #{orderId,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.tongji.softwaretest.shikebackend.entity.Order">
        insert into t_order (order_id, order_status, store_id,
        store_name, order_time, arrive_time,
        address, delivery_side, pay_way,
        delivery_cost, preferential_price, pay_cost,
        user_id, comment_flag)
        values (#{orderId,jdbcType=VARCHAR}, #{orderStatus,jdbcType=INTEGER}, (select #{storeId,jdbcType=INTEGER} from t_store where store_id = #{storeId,jdbcType=INTEGER}),
        (select #{storeName,jdbcType=VARCHAR} from t_store where store_id = #{storeId,jdbcType=INTEGER} and store_name = #{storeName,jdbcType=VARCHAR}), #{orderTime,jdbcType=VARCHAR}, #{arriveTime,jdbcType=VARCHAR},
        #{address,jdbcType=VARCHAR}, #{deliverySide,jdbcType=VARCHAR}, #{payWay,jdbcType=VARCHAR},
        #{deliveryCost,jdbcType=REAL}, #{preferentialPrice,jdbcType=REAL}, #{payCost,jdbcType=REAL},
        (select #{userId,jdbcType=INTEGER} from t_user where user_id = #{userId,jdbcType=INTEGER}), #{commentFlag,jdbcType=INTEGER})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.tongji.softwaretest.shikebackend.entity.Order">
        update t_order
        set order_status = #{orderStatus,jdbcType=INTEGER},
        store_id = #{storeId,jdbcType=INTEGER},
        store_name = #{storeName,jdbcType=VARCHAR},
        order_time = #{orderTime,jdbcType=VARCHAR},
        arrive_time = #{arriveTime,jdbcType=VARCHAR},
        address = #{address,jdbcType=VARCHAR},
        delivery_side = #{deliverySide,jdbcType=VARCHAR},
        pay_way = #{payWay,jdbcType=VARCHAR},
        delivery_cost = #{deliveryCost,jdbcType=REAL},
        preferential_price = #{preferentialPrice,jdbcType=REAL},
        pay_cost = #{payCost,jdbcType=REAL},
        user_id = #{userId,jdbcType=INTEGER},
        comment_flag = #{commentFlag,jdbcType=INTEGER}
        where order_id = #{orderId,jdbcType=VARCHAR}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select order_id, order_status, store_id, store_name, order_time, arrive_time, address,
        delivery_side, pay_way, delivery_cost, preferential_price, pay_cost, user_id, comment_flag
        from t_order
        where order_id = #{orderId,jdbcType=VARCHAR}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select order_id, order_status, store_id, store_name, order_time, arrive_time, address,
        delivery_side, pay_way, delivery_cost, preferential_price, pay_cost, user_id, comment_flag
        from t_order
        where user_id = #{userId,jdbcType=INTEGER}
    </select>
    <update id="updateFlag" parameterType="com.tongji.softwaretest.shikebackend.entity.Order">
        update t_order
        set comment_flag = 1
        where order_id = #{orderId,jdbcType=VARCHAR}
    </update>
</mapper>